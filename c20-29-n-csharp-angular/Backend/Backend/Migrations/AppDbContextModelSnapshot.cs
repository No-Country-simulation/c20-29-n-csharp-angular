// <auto-generated />
using System;
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Backend.Models.Adopciones", b =>
                {
                    b.Property<int>("IdAdopcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdPostNavigationIdPost")
                        .HasColumnType("int");

                    b.HasKey("IdAdopcion");

                    b.HasIndex("IdPostNavigationIdPost");

                    b.ToTable("Adopciones");
                });

            modelBuilder.Entity("Backend.Models.Apadrinamientos", b =>
                {
                    b.Property<int>("IdApadrinamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdPostNavigationIdPost")
                        .HasColumnType("int");

                    b.HasKey("IdApadrinamiento");

                    b.HasIndex("IdPostNavigationIdPost");

                    b.ToTable("Apadrinamientos");
                });

            modelBuilder.Entity("Backend.Models.Comentarios", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdPostNavigationIdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdComentario");

                    b.HasIndex("IdPostNavigationIdPost");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("Backend.Models.Donaciones", b =>
                {
                    b.Property<int>("IdDonacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdPostNavigationIdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdRefugio")
                        .HasColumnType("int");

                    b.Property<int?>("IdRefugioNavigationIdRefugio")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdDonacion");

                    b.HasIndex("IdPostNavigationIdPost");

                    b.HasIndex("IdRefugioNavigationIdRefugio");

                    b.ToTable("Donaciones");
                });

            modelBuilder.Entity("Backend.Models.MeGusta", b =>
                {
                    b.Property<int>("IdMeGusta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int?>("IdPost")
                        .HasColumnType("int");

                    b.Property<int?>("IdPostNavigationIdPost")
                        .HasColumnType("int");

                    b.HasKey("IdMeGusta");

                    b.HasIndex("IdPostNavigationIdPost");

                    b.ToTable("MeGusta");
                });

            modelBuilder.Entity("Backend.Models.Post", b =>
                {
                    b.Property<int>("IdPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FotoVideo")
                        .HasColumnType("longtext");

                    b.Property<int?>("IdRefugio")
                        .HasColumnType("int");

                    b.Property<int?>("IdRefugioNavigationIdRefugio")
                        .HasColumnType("int");

                    b.Property<string>("NumeroIdentificacionFiscal")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RedesSociales")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoPost")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TipoProveedor")
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdPost");

                    b.HasIndex("IdRefugioNavigationIdRefugio");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("Backend.Models.Refugios", b =>
                {
                    b.Property<int>("IdRefugio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AñoFundacion")
                        .HasColumnType("int");

                    b.Property<string>("DatosContacto")
                        .HasColumnType("longtext");

                    b.Property<string>("DocumentoLegal")
                        .HasColumnType("longtext");

                    b.Property<string>("FotosRefugio")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RedesSociales")
                        .HasColumnType("longtext");

                    b.Property<string>("TestimoniosReferencias")
                        .HasColumnType("longtext");

                    b.Property<string>("UbicacionFisica")
                        .HasColumnType("longtext");

                    b.Property<string>("VideoPresentacion")
                        .HasColumnType("longtext");

                    b.Property<int>("_TipoOrganizacion")
                        .HasColumnType("int");

                    b.HasKey("IdRefugio");

                    b.ToTable("Refugios");
                });

            modelBuilder.Entity("Backend.Models.Usuarios", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Backend.Models.Adopciones", b =>
                {
                    b.HasOne("Backend.Models.Post", "IdPostNavigation")
                        .WithMany("Adopciones")
                        .HasForeignKey("IdPostNavigationIdPost");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("Backend.Models.Apadrinamientos", b =>
                {
                    b.HasOne("Backend.Models.Post", "IdPostNavigation")
                        .WithMany("Apadrinamientos")
                        .HasForeignKey("IdPostNavigationIdPost");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("Backend.Models.Comentarios", b =>
                {
                    b.HasOne("Backend.Models.Post", "IdPostNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdPostNavigationIdPost");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("Backend.Models.Donaciones", b =>
                {
                    b.HasOne("Backend.Models.Post", "IdPostNavigation")
                        .WithMany("Donaciones")
                        .HasForeignKey("IdPostNavigationIdPost");

                    b.HasOne("Backend.Models.Refugios", "IdRefugioNavigation")
                        .WithMany("Donaciones")
                        .HasForeignKey("IdRefugioNavigationIdRefugio");

                    b.Navigation("IdPostNavigation");

                    b.Navigation("IdRefugioNavigation");
                });

            modelBuilder.Entity("Backend.Models.MeGusta", b =>
                {
                    b.HasOne("Backend.Models.Post", "IdPostNavigation")
                        .WithMany("MeGusta")
                        .HasForeignKey("IdPostNavigationIdPost");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("Backend.Models.Post", b =>
                {
                    b.HasOne("Backend.Models.Refugios", "IdRefugioNavigation")
                        .WithMany("Post")
                        .HasForeignKey("IdRefugioNavigationIdRefugio");

                    b.Navigation("IdRefugioNavigation");
                });

            modelBuilder.Entity("Backend.Models.Post", b =>
                {
                    b.Navigation("Adopciones");

                    b.Navigation("Apadrinamientos");

                    b.Navigation("Comentarios");

                    b.Navigation("Donaciones");

                    b.Navigation("MeGusta");
                });

            modelBuilder.Entity("Backend.Models.Refugios", b =>
                {
                    b.Navigation("Donaciones");

                    b.Navigation("Post");
                });
#pragma warning restore 612, 618
        }
    }
}
